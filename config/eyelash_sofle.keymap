#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC       &kp N1            &kp N2          &kp N3          &kp N4              &kp N5       &kp UP_ARROW     &kp N6        &kp N7              &kp N8          &kp N9          &kp N0            &kp BACKSPACE
&kp TAB       &kp Q             &kp W           &kp F           &kp P               &kp B        &kp DOWN_ARROW   &kp J         &kp L               &kp U           &kp Y           &kp SEMI          &kp BSLH
&lt 3 ESCAPE  &mt LEFT_SHIFT A  &mt LEFT_GUI R  &mt LEFT_ALT S  &mt LEFT_CONTROL T  &kp G        &kp LEFT_ARROW   &kp M         &mt LEFT_CONTROL N  &mt LEFT_ALT E  &mt LEFT_GUI I  &mt LEFT_SHIFT O  &kp APOS
&kp LSHFT     &kp Z             &kp X           &kp C           &kp D               &kp V        &kp RIGHT_ARROW  &kp K         &kp H               &kp COMMA       &kp DOT         &kp FSLH          &kp RIGHT_SHIFT
&kp C_MUTE    &none             &none           &none           &mo 1               &kp SPACE    &kp ENTER        &kp LA(BKSP)  &mo 1               &none           &none           &tog 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2        &kp F3        &kp F4        &kp F5         &mmv MOVE_UP     &kp F6        &kp C_VOL_UP   &kp C_VOLUME_DOWN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&bl BL_ON   &kp GRAVE        &kp TILDE     &kp EQUAL     &kp PLUS      &trans         &mmv MOVE_DOWN   &trans        &kp MINUS      &kp UNDERSCORE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL
&bl BL_OFF  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &mmv MOVE_LEFT   &kp NUMBER_6  &kp N7         &kp N8             &kp N9                &kp N0                 &kp RIGHT_BRACKET
&sys_reset  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT    &mmv MOVE_RIGHT  &kp CARET     &kp AMPERSAND  &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp C_MUTE  &trans           &trans        &trans        &trans        &trans         &mkp LCLK        &trans        &trans         &trans             &trans                &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &tog 2
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans                 &trans  &trans    &trans  &trans        &trans          &trans         &trans  &trans  &trans
&trans  &trans  &trans  &trans                 &kp E   &trans    &trans  &kp DOWN      &kp RIGHT       &trans         &trans  &trans  &trans
&trans  &trans  &trans  &kp LS(LA(LG(LC(S))))  &kp D   &trans    &trans  &trans        &kp LC(LEFT)    &kp LC(RIGHT)  &trans  &trans  &trans
&trans  &trans  &trans  &trans                 &trans  &trans    &trans  &kp UP_ARROW  &kp LEFT_ARROW  &trans         &trans  &trans  &trans
&trans  &trans  &trans  &trans                 &trans  &trans    &trans  &trans        &trans          &trans         &trans  &trans
            >;
        };
    };
};
