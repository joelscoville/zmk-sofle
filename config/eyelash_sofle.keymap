#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    homerowshiftright: homerowshiftright {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROWSHIFTRIGHT";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        hold-while-undecided;
        hold-trigger-key-positions = <0 1 2 3 4 5 0 1 13 14 15 16 17 18 13 14 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57>;
        hold-trigger-on-release;
        flavor = "balanced";
    };

    homerowshiftleft: homerowshiftleft {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROWSHIFTLEFT";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        hold-while-undecided;
        hold-trigger-on-release;
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 59 60 61 62 63>;
        flavor = "balanced";
    };

    homerowright: homerowright {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROWRIGHT";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <300>;
        flavor = "tap-preferred";
        quick-tap-ms = <250>;
    };

    homerowleft: homerowleft {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROWLEFT";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <300>;
        flavor = "tap-preferred";
        quick-tap-ms = <250>;
    };

    holdmod: holdmod {
        compatible = "zmk,behavior-hold-tap";
        label = "HOLDMOD";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <300>;
        flavor = "tap-preferred";
        quick-tap-ms = <250>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC       &kp N1  &kp N2                   &kp N3                   &kp N4                       &kp N5            &kp UP_ARROW     &kp N6  &kp N7                        &kp N8                          &kp N9                    &kp N0    &kp BACKSLASH
&kp TAB       &kp Q   &kp W                    &kp F                    &kp P                        &kp B             &kp DOWN_ARROW   &kp J   &kp L                         &kp U                           &kp Y                     &kp SEMI  &kp BACKSPACE
&lt 3 ESCAPE  &kp A   &homerowleft LEFT_GUI R  &homerowleft LEFT_ALT S  &homerowleft LEFT_CONTROL T  &kp G             &kp LEFT_ARROW   &kp M   &homerowright LEFT_CONTROL N  &homerowright LEFT_ALT E        &homerowright LEFT_GUI I  &kp O     &kp APOS
&kp LSHFT     &kp Z   &kp X                    &kp C                    &kp D                        &kp V             &kp RIGHT_ARROW  &kp K   &kp H                         &kp COMMA                       &kp DOT                   &kp FSLH  &kp RIGHT_SHIFT
&kp C_MUTE    &tog 3  &none                    &key_repeat              &holdmod 1 SPACE             &kp LEFT_SHIFT    &kp ENTER        &mo 1   &holdmod 3 LA(BACKSPACE)      &homerowright LEFT_SHIFT ENTER  &none                     &tog 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE";
        };

        symbols {
            bindings = <
&kp GRAVE   &kp F1           &kp F2        &kp F3        &kp F4        &kp F5         &mmv MOVE_UP     &kp F6        &kp C_VOL_UP   &kp C_VOLUME_DOWN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans      &kp GRAVE        &kp TILDE     &kp EQUAL     &kp PLUS      &trans         &mmv MOVE_DOWN   &trans        &kp MINUS      &kp UNDERSCORE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL
&trans      &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &mmv MOVE_LEFT   &kp NUMBER_6  &kp N7         &kp N8             &kp N9                &kp N0                 &kp RIGHT_BRACKET
&sys_reset  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT    &mmv MOVE_RIGHT  &kp CARET     &kp AMPERSAND  &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp C_MUTE  &trans           &trans        &trans        &trans        &trans         &mkp LCLK        &trans        &trans         &trans             &trans                &trans
            >;

            display-name = "SYMBOLS";
            sensor-bindings = <&scroll_encoder>;
        };

        gaming {
            bindings = <
&kp TILDE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &mmv MOVE_UP     &kp NUMBER_6  &kp N7  &kp N8     &kp N9      &kp N0            &trans
&kp TAB           &kp Q         &kp W         &kp E         &kp T         &kp Y     &mmv MOVE_DOWN   &kp U         &kp I   &kp O      &kp P       &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LEFT_CONTROL  &kp A         &kp S         &kp D         &kp F         &kp G     &mmv MOVE_LEFT   &kp H         &kp J   &kp K      &kp L       &kp SEMICOLON     &kp SQT
&kp LEFT_SHIFT    &kp Z         &kp X         &kp C         &kp V         &kp B     &mmv MOVE_RIGHT  &kp N         &kp M   &kp COMMA  &kp PERIOD  &kp SLASH         &kp RIGHT_SHIFT
&trans            &trans        &trans        &trans        &kp SPACE     &trans    &mkp LCLK        &mo 1         &trans  &trans     &trans      &tog 2
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "GAMING";
        };

        system {
            bindings = <
&bt BT_CLR  &bt BT_PRV  &bt BT_NXT      &trans        &soft_off           &trans                   &trans  &trans        &trans          &trans         &trans  &trans  &trans
&trans      &trans      &kp BACKSPACE   &kp UP_ARROW  &kp LS(LC(LA(F5)))  &kp LS(LA(LC(F1)))       &trans  &kp DOWN      &kp RIGHT       &trans         &trans  &trans  &trans
&trans      &trans      &kp LEFT_ARROW  &kp DOWN      &kp RIGHT           &kp LS(LA(LC(LG(D))))    &trans  &trans        &kp LC(LEFT)    &kp LC(RIGHT)  &trans  &trans  &trans
&trans      &kp LG(X)   &kp LG(C)       &trans        &kp LG(V)           &trans                   &trans  &kp UP_ARROW  &kp LEFT_ARROW  &trans         &trans  &trans  &trans
&trans      &trans      &trans          &trans        &trans              &trans                   &trans  &trans        &trans          &trans         &trans  &trans
            >;

            label = "SYSTEM";
        };
    };
};
